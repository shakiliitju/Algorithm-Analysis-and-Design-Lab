Problem-1: Sudoko Problem


//192318
//problem-1
#include<bits/stdc++.h>
using namespace std;
#define N 9
int grid[15][15];
bool check(int row,
                    int col, int num)
{
    for (int x = 0; x <= 8; x++)
        if (grid[row][x] == num)
            return false;
    for (int x = 0; x <= 8; x++)
        if (grid[x][col] == num)
            return false;
    int xd = row - row % 3,
            xdd = col - col % 3;

    for (int i = 0; i < 3; i++)
        for (int j = 0; j < 3; j++)
            if (grid[i + xd][j +
                            xdd] == num)
                return false;

    return true;
}

bool solve(int row, int col)
{
    if (row == N - 1 && col == N)
        return true;

    if (col == N) {
        row++;
        col = 0;
    }
    if (grid[row][col] > 0)
        return solve(row, col + 1);

    for (int num = 1; num <= N; num++)
    {
        if (check(row, col, num))
        {
            grid[row][col] = num;
            if (solve(row, col + 1))
                return true;
        }
        grid[row][col] = 0;
    }
    return false;
}

int main()
{
    int i, j;
    for(i=0; i<9; i++)
    {
        for(j=0; j<9; j++)
            cin>>grid[i][j];
    }
    solve(0,0);
    cout<<"solution-\n";
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
            cout << grid[i][j] << " ";
        cout << endl;
    }
    return 0;
}


Problem-2: Platform Selection


//192318
//problem-2
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n,i,j;
    cin>>n;
    int a[n+5],d[n+5];
    for(i=0; i<n; i++)
        cin>>a[i];
    for(i=0; i<n; i++)
        cin>>d[i];
    vector<pair<int,int>>v;
    for(i=0; i<n; i++)
        v.push_back(make_pair(d[i],a[i]));
    sort(v.begin(),v.end());
    int platform=0;
    for(i=1; i<n; i++)
    {
        if(v[i-1].first>v[i].second)
            platform++;
    }
    cout<<"Minimum platform: "<<platform<<endl;
    return 0;
}



